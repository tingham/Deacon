/* tslint:disable */
/* eslint-disable */
/**
 * Deacon
 * Deacon API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Enum Box sphere cylinder cone torus plane circle ring triangle quad } from './Enum Box sphere cylinder cone torus plane circle ring triangle quad';
import {
    Enum Box sphere cylinder cone torus plane circle ring triangle quadFromJSON,
    Enum Box sphere cylinder cone torus plane circle ring triangle quadFromJSONTyped,
    Enum Box sphere cylinder cone torus plane circle ring triangle quadToJSON,
} from './Enum Box sphere cylinder cone torus plane circle ring triangle quad';

/**
 * 
 * @export
 * @interface PrimitiveGeometry
 */
export interface PrimitiveGeometry {
    /**
     * The type of the primitive.
     * @type {Enum Box sphere cylinder cone torus plane circle ring triangle quad}
     * @memberof PrimitiveGeometry
     */
    prototype?: Enum Box sphere cylinder cone torus plane circle ring triangle quad;
    /**
     * The unique identifier of the thing.
     * @type {string}
     * @memberof PrimitiveGeometry
     */
    id?: string;
    /**
     * The name of the thing.
     * @type {string}
     * @memberof PrimitiveGeometry
     */
    name?: string;
    /**
     * The description of the thing.
     * @type {string}
     * @memberof PrimitiveGeometry
     */
    description?: string;
    /**
     * The date and time the thing was created.
     * @type {Date}
     * @memberof PrimitiveGeometry
     */
    created?: Date;
    /**
     * The date and time the thing was last updated.
     * @type {Date}
     * @memberof PrimitiveGeometry
     */
    updated?: Date;
    /**
     * The unique identifier of the author of the thing.
     * @type {string}
     * @memberof PrimitiveGeometry
     */
    authorid?: string;
}

/**
 * Check if a given object implements the PrimitiveGeometry interface.
 */
export function instanceOfPrimitiveGeometry(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PrimitiveGeometryFromJSON(json: any): PrimitiveGeometry {
    return PrimitiveGeometryFromJSONTyped(json, false);
}

export function PrimitiveGeometryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrimitiveGeometry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'prototype': !exists(json, 'prototype') ? undefined : Enum Box sphere cylinder cone torus plane circle ring triangle quadFromJSON(json['prototype']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        'updated': !exists(json, 'updated') ? undefined : (new Date(json['updated'])),
        'authorid': !exists(json, 'authorid') ? undefined : json['authorid'],
    };
}

export function PrimitiveGeometryToJSON(value?: PrimitiveGeometry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'prototype': Enum Box sphere cylinder cone torus plane circle ring triangle quadToJSON(value.prototype),
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'created': value.created === undefined ? undefined : (value.created.toISOString()),
        'updated': value.updated === undefined ? undefined : (value.updated.toISOString()),
        'authorid': value.authorid,
    };
}

